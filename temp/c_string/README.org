
* C语言下的字符串操作

** 切割字符串——strtok(), strtok_r()和strtok_s()
   #+BEGIN_SRC C
     #include <stdio.h>
     #include <string.h>

     int main(int argc, char *argv[])
     {
       char *result = strpbrk("This is a test", "a");
       if (result != NULL)
         printf("result = %s\n", result);
       return 0;
     }

   #+END_SRC

   #+RESULTS:
   : result = a test

** strtok()
    将一个字符串按指定的分割符，分割成一些子串。
    #+BEGIN_SRC c :tangle strtok.c
      #include <stdio.h>
      #include <string.h>

      int main(void)
      {
        int toknum = 0;
        char src[] = "Hello,, world!";
        const char delimiters[] = ", !";
        char *token = strtok(src, delimiters);
        printf("%d: [%s]\n", ++toknum, token);

        while((token = strtok(NULL, delimiters)) != NULL) {
          printf("%d: [%s]\n", ++toknum, token);
        }

        return 0;
      }
    #+END_SRC

** strtok_s(), strtok_r()
    strtok()是非重入的，所以不能嵌套使用。
    #+BEGIN_SRC c :tangle strtok_s.c
      #include <string.h>
      #include <stdio.h>

      int main(void)
      {
        
        char src[] = "1.2,3.5,4.2";
        char *next = NULL;
        char *first = strtok_r(src, ",", &next);

        do {
        char *part;
        char *posn;

        printf("[%s]\n", first);
        part = strtok_r(first, ".", &posn);
        while (part != NULL) {
            printf(" [%s]\n", part);
            part = strtok_r(NULL, ".", &posn);
        }

        }while((first = strtok_r(NULL, ",", &next)) != NULL);

        return 0;
      }
    #+END_SRC

** strcpy(), snprintf(), strncat(), strncpy().
    针对strncpy(), 这个函数，正常的使用方式为：
    #+BEGIN_SRC c
      strncpy(b, a, sizeof(b));
      b[sizeof(b)/sizeof(*b)-1] = '\0'; /* terminate the string */
      printf("%s\n", b);
    #+END_SRC

** atoi(), atof(), strtol(), strtod()
    这些都是字符串转换为整数的函数，尽量使用strtol()和strtod().
    #+BEGIN_SRC c
      long a = strtol("101", 0, 2); /* a = 5L */
      long b = strtol("101", 0, 8); /* b = 65L */
      long c = strtol("101", 0, 10); /* c = 101L */
      long d = strtol("101", 0, 16); /* d = 257L */
      long e = strtol("101", 0, 0); /* e = 101L */
      long f = strtol("0101", 0, 0); /* f = 65L */
      long g = strtol("0x101", 0, 0); /* g = 257L */
    #+END_SRC
    
** strcmp(), strncmp(), strcasecmp(), strncasecmp()
    strcase*函数不是标准C函数，而是一个POSIX扩展。

** strchr(), strrchr(), strstr()
    查找字符串中特定的字符, 查找子串。

** strspn(), strcspn(), wcsspn(), wcscspn()
    strspn()返回只包含特定列表中字符串的子串长度。
    而strcspn()返回不包含特定列表中字符串的子串长度。
    #+BEGIN_SRC c :tangle strspn.c
      #include <stdio.h>
      #include <string.h>

      int main(void)
      {
        const char sepchars[] = ",.!?";
        char foo[] = ";ball call,.fall gall hall?!.,";
        char *s;
        int n;

        for (s = foo; *s != 0; /* empty */) {
          /* Get the number of token separator characters. */
          n = (int)strspn(s, sepchars);
          if (n > 0)
            printf("skipping separators: << %.*s >> (length=%d)\n", n, s, n);

          /* Actually skip the separators now. */
          s += n;
          /* Get the number of token (non-separator) characters. */
          n = (int)strcspn(s, sepchars);
          if (n > 0)
            printf("token found: << %.*s >> (length=%d)\n", n, s, n);
          /* Skip the token now. */
          s += n;
        }

        printf("== token list exhausted ==\n");

        return 0;
      }
    #+END_SRC
